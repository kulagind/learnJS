// –í–Ω—É—Ç—Ä. —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Å—Ç—Ä–æ–∫ UTF-16.
let single = 'single string';
let double = "double string";
let backticks = `${single} 
backticks 
string`;

// –°–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –æ–±—Ä–∞—Ç–Ω–æ–≥–æ —Å–ª—ç—à–∞ (\ - —Å–∏–º–≤–æ–ª —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è)
// 1 —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª –∑–∞–Ω–∏–º–∞–µ—Ç 1 –¥–ª–∏–Ω—É —Å—Ç—Ä–æ–∫–∏!!!
// –¢–∞–∫:
console.log('My\n'.length); // 3
// \n - –ø–µ—Ä–µ–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏
console.log("Hi:\n * Dima\n * It's a new row");

// \r - –≤–æ–∑–≤—Ä–∞—Ç –∫–∞—Ä–µ—Ç–∫–∏, –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤–∏–Ω–¥–æ—É—Å
// \", \' - –∫–∞–≤—ã—á–∫–∏
// \\ - –æ–±—Ä–∞—Ç–Ω—ã–π —Å–ª—ç—à
// \t - –∑–Ω–∞–∫ —Ç–∞–±—É–ª—è—Ü–∏–∏
// \xXX - —Å–∏–º–≤–æ–ª —Å 16-—Ä–∏—á–Ω—ã–º —é–Ω–∏–∫–æ–¥–Ω—ã–º –∫–æ–¥–æ–º –•–•. –ù–∞–ø—Ä. \x7A - —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ 'z'
// \uXXXX - —Å–∏–º–≤–æ–ª –≤ –∫–æ–¥–∏—Ä–æ–≤–∫–µ UTF-16 —Å 16-—Ä–∏—á–Ω—ã–º –∫–æ–¥–æ–º –•–•–•–•. –ù–∞–ø—Ä. \u00A9 - —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ '¬©'
// \u{x...xxxxxx} - —Å–∏–º–≤–æ–ª –≤ –∫–æ–¥–∏—Ä–æ–≤–∫–µ UTF-32 —Å 16-—Ä–∏—á–Ω—ã–º –∫–æ–¥–æ–º –æ—Ç U+0000 –¥–æ U+10FFFFF

alert("\u{1F60D}"); // üòç —Å–º–∞–π–ª–∏–∫ —Å –≥–ª–∞–∑–∞–º–∏-—Å–µ—Ä–¥–µ—á–∫–∞–º–∏

// –î–æ—Å—Ç—É–ø –∫ —Å–∏–º–≤–æ–ª–∞–º
let str = `Hello`;
console.log(str[0]); // H - –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å–∏–º–≤–æ–ª–∞ –≤–µ—Ä–Ω–µ—Ç undefined
console.log(str[1000]); // –≤–µ—Ä–Ω–µ—Ç undefined
console.log(str.charAt(0)); // H - –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å–∏–º–≤–æ–ª–∞ –≤–µ—Ä–Ω–µ—Ç ''
console.log(str.charAt(1000)); // –≤–µ—Ä–Ω–µ—Ç ''
console.log(str[str.length - 1]); // o - –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª
// –ø–µ—Ä–µ–±–æ—Ä —Å–∏–º–≤–æ–ª–æ–≤
for (let char of 'Hello') {
    console.log(char);
}

// –°—Ç—Ä–æ–∫–∏ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã!!! –ú–æ–∂–Ω–æ –ª–∏—à—å —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –∏ –ø–æ–º–µ—Å—Ç–∏—Ç—å –µ–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤–º–µ—Å—Ç–æ —Å—Ç–∞—Ä–æ–π

// –ò–∑–º. —Ä–µ–≥–∏—Å—Ç—Ä–∞
console.log(str.toLowerCase());
console.log(str.toUpperCase());

// –ü–æ–∏—Å–∫ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ —Å—Ç—Ä–æ–∫–∞.indexOf(substr, position).
// –ß—Ç–æ–± –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å indexOf –≤ —Ü–∏–∫–ª–µ
console.log(str.indexOf('e')); // 1, —Ç.–∫. 2–æ–π —Å–∏–º–≤–æ–ª
console.log(str.indexOf('E')); // -1, —Ç.–∫. —Å–∏–º–≤–æ–ª –Ω–µ –Ω–∞–π–¥–µ—Ç, –ø–æ–∏—Å–∫ —á—É—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É
// str.lastIndexOf(substr, position) - –∏—â–µ—Ç —Å –∫–æ–Ω—Ü–∞. –ü–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ

// ~ - –ü–æ–±–∏—Ç–æ–≤–æ–µ –ù–ï
// –¥–ª—è 32-—Ä–∞–∑—Ä—è–¥–Ω—ã—Ö —á–∏—Å–ª–µ ~n == -(n+1);
// ~n == 0, —Ç–æ–ª—å–∫–æ –ø—Ä–∏ n == -1
// –û–∑–Ω–∞—á–∞–µ—Ç —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ª–∏—á–µ–Ω –æ—Ç -1 —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –µ—Å—Ç—å!
if (~str.indexOf("Hel")) {
    alert('–°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –µ—Å—Ç—å'); // —Ä–∞–±–æ—Ç–∞–µ—Ç
}

// includes(substr, position), startWith, endsWith - –±–æ–ª–µ–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –ø–æ–¥—Å—Ç—Ä–æ–∫
console.log(str.includes('el')); // true
console.log(str.includes('ele')); // false
console.log(str.startsWith('ele')); // false
console.log(str.startsWith('Hell')); // true
console.log(str.endsWith('Hello')); // true

// –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
// .slice(start, end –Ω–µ –≤–∫–ª—é—á–∞—è); - –º–æ–∂–Ω–æ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã (–æ—Ç—Å—á–µ—Ç —Å –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏)
let str2 = "stringify";
console.log(str2.slice(0, 5)); // 'strin'
// .substring(start, end –Ω–µ –≤–∫–ª—é—á–∞—è); - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∞—Å—Ç—å —Å—Ç—Ä–æ–∫–∏ (—Å—Ö–ª–∂ —Å–æ —Å–ª–∞–π—Å, –Ω–æ —Ç—É—Ç –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å
// —Å—Ç–∞—Ä—Ç > –µ–Ω–¥). –ù–µ–ª—å–∑—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ!
console.log(str2.substring(0, 5)); // 'strin'
// .subsrt(start, length); - —á–∞—Å—Ç—å —Å—Ç—Ä–æ–∫–∏, –¥–ª–∏–Ω–æ–π length
// –ú–æ–∂–µ—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –ù–ï–ë–†–ê–£–ó–ï–†–ê!
console.log(str2.substr(0, 5)); // 'strin'

// –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ - —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ –∫–æ–¥—ã UTF-16, –∫–∞–∫ –æ–¥–Ω–∞ –∏–∑ —Å—Ç—Ä–æ–∫ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è, —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è
console.log('a' > 'Z'); // true - —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã –±–æ–ª—å—à–µ –∑–∞–≥–ª–∞–≤–Ω—ã—Ö
console.log('√ñsterreich' > 'Zealand'); // true -  –±—É–∫–≤—ã —Å –¥–∏–∞–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ –∑–Ω–∞–∫–∞–º–∏ –∏–¥—É—Ç –Ω–µ –ø–æ –ø–æ—Ä—è–¥–∫—É

// str.codePointAt(pos) - –ø–æ–ª—É—á–∏—Ç—å –∫–æ–¥ UTF-16 —Å–∏–º–≤–æ–ª–∞ –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏
console.log('z'.codePointAt(0)); // 122
console.log('Z'.codePointAt(0)); // 90

// String.fromCodePoint(code) - —Å–æ–∑–¥–∞–µ—Ç —Å–∏–º–≤–æ–ª –ø–æ –µ–≥–æ –∫–æ–¥—É
console.log(String.fromCodePoint(90)); // 'Z'

// –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫
// –≤—Å–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã (–¥–ª—è IE10‚àí –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ Intl.JS)
// –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç ECMA 402, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—â–∏–π –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö
// —Å —É—á—ë—Ç–æ–º –∏—Ö –ø—Ä–∞–≤–∏–ª.

// str.localeCompare(str2); - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∏—Å–ª–æ, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–µ–µ –∫–∞–∫–∞—è —Å—Ç—Ä–æ–∫–∞ –±–æ–ª—å—à–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ —è–∑—ã–∫–∞
// - –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –µ—Å–ª–∏ str –º–µ–Ω—å—à–µ str2.
// - –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –µ—Å–ª–∏ str –±–æ–ª—å—à–µ str2.
// - 0, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∏ —Ä–∞–≤–Ω—ã.
console.log('√ñsterreich'.localeCompare('Zealand')); // -1

// ----------------------------------

// –ú–Ω–æ–≥–∏–µ —Å–∏–º–≤–æ–ª—ã –≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –æ–¥–Ω–∏–º 16-–±–∏—Ç–Ω—ã–º —Å–ª–æ–≤–æ–º:
// —ç—Ç–æ –∏ –±—É–∫–≤—ã –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏—Ö —è–∑—ã–∫–æ–≤, –∏ —á–∏—Å–ª–∞, –∏ –¥–∞–∂–µ –º–Ω–æ–≥–∏–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã.
//
// –ù–æ 16 –±–∏—Ç–æ–≤ ‚Äî —ç—Ç–æ 65536 –∫–æ–º–±–∏–Ω–∞—Ü–∏–π, —Ç–∞–∫ —á—Ç–æ –Ω–∞ –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —ç—Ç–æ–≥–æ, —Ä–∞–∑—É–º–µ–µ—Ç—Å—è, –Ω–µ —Ö–≤–∞—Ç–∏—Ç.
// –ü–æ—ç—Ç–æ–º—É —Ä–µ–¥–∫–∏–µ —Å–∏–º–≤–æ–ª—ã –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –¥–≤—É–º—è 16-–±–∏—Ç–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
// ‚Äî —ç—Ç–æ —Ç–∞–∫–∂–µ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è ¬´—Å—É—Ä—Ä–æ–≥–∞—Ç–Ω–∞—è –ø–∞—Ä–∞¬ª. –î–ª–∏–Ω–∞ —Ç–∞–∫–∏—Ö —Å—Ç—Ä–æ–∫ ‚Äî 2:
console.log('©∑∂'.length); // 2
console.log('üòÇ'.length); // 2
// String.fromCodePoint –∏ str.codePointAt ‚Äî –¥–≤–∞ —Ä–µ–¥–∫–∏—Ö –º–µ—Ç–æ–¥–∞,
// –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞—é—â–∏–µ —Å —Å—É—Ä—Ä–æ–≥–∞—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–∏.
// !!!! (String.fromCharCode –∏ str.charCodeAt - —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –º–µ—Ç–æ–¥—ã, –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–µ –≤—ã—à–µ—É–ø–æ–º—è–Ω—É—Ç—ã–º,
// –Ω–æ —ç—Ç–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é —Å —Å—É—Ä—Ä–æ–≥–∞—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–∏) !!!!
// –û—Ç–¥–µ–ª—å–Ω—ã–µ —á–∞—Å—Ç–∏ —Å—É—Ä—Ä–æ–≥–∞—Ç–Ω–æ–π –ø–∞—Ä—ã –Ω–µ –∏–º–µ—é—Ç —Å–º—ã—Å–ª–∞!
console.log('©∑∂'[0]); // –º—É—Å–æ—Ä
console.log('©∑∂'[1]); // –º—É—Å–æ—Ä

// ----------------------------------
// –í–æ –º–Ω–æ–≥–∏—Ö —è–∑—ã–∫–∞—Ö –µ—Å—Ç—å —Å–∏–º–≤–æ–ª—ã, —Å–æ—Å—Ç–æ—è—â–∏–µ –∏–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–≥–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
// —Å–æ –∑–Ω–∞–∫–æ–º —Å–≤–µ—Ä—Ö—É –∏–ª–∏ —Å–Ω–∏–∑—É.
// –ë—É–∫–≤–∞ a ‚Äî —ç—Ç–æ –æ—Å–Ω–æ–≤–∞ –¥–ª—è √†√°√¢√§√£√•ƒÅ.
// –ù–∞–∏–±–æ–ª–µ–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å–æ—Å—Ç–∞–≤–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∏–º–µ—é—Ç —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–¥ –≤ —Ç–∞–±–ª–∏—Ü–µ UTF-16.
// –ù–æ –Ω–µ –≤—Å–µ, –≤ —Å–∏–ª—É –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–º–±–∏–Ω–∞—Ü–∏–π.

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–º–≤–æ–ª S –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫ –Ω–µ–º—É –∑–Ω–∞–∫–∏.
// –≠—Ç–æ –¥–∞—ë—Ç –±–æ–ª—å—à—É—é –≥–∏–±–∫–æ—Å—Ç—å, –Ω–æ –∏–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ –ø–æ—Ä—è–¥–æ–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
// –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–º, –º—ã –ø–æ–ª—É—á–∞–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤:
// –º–æ–∂–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –ø–æ-—Ä–∞–∑–Ω–æ–º—É —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∏—á–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ –Ω–µ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è.
console.log('S\u0307'); // SÃá
console.log('S\u0307\u0323'); // SÃáÃ£

let s1 = 'S\u0307\u0323'; // SÃáÃ£, S + —Ç–æ—á–∫–∞ —Å–≤–µ—Ä—Ö—É + —Ç–æ—á–∫–∞ —Å–Ω–∏–∑—É
let s2 = 'S\u0323\u0307'; // SÃ£Ãá, S + —Ç–æ—á–∫–∞ —Å–Ω–∏–∑—É + —Ç–æ—á–∫–∞ —Å–≤–µ—Ä—Ö—É

console.log(s1 === s2); // false, —Ö–æ—Ç—è –Ω–∞ –≤–∏–¥ —Å–∏–º–≤–æ–ª—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã (?!)
// –¥–ª—è —Ä–µ—à–µ–Ω–∏—è —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º—ã –µ—Å—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º—ã —é–Ω–∏–∫–æ–¥–Ω–æ–π –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏, –ø—Ä–∏–≤–æ–¥—è—â–∏–π –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É
// –∫ –µ–¥–∏—Ä–æ–º—É "–Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É" –≤–∏–¥—É.
// .normalize()
console.log(s1.normalize() === s2.normalize()); // false - –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –æ–Ω —Å–ª–æ–ø—ã–≤–∞–µ—Ç –≤ –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª

// str.trim() - —É–±—Ä–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã —Å 2—Ö —Å—Ç—Ä–æ–Ω
// str.repeat(n) - –ø–æ–≤—Ç–æ—Ä—è–µ—Ç —Å—Ç—Ä–æ–∫—É n —Ä–∞–∑.

// ----------------------------------

function toUpperCaseFirstLetter(str) {
    return !str ? str : str[0].toUpperCase() + str.toLowerCase().slice(1); // c –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
}

const spamWords = ['viagra', 'porn', 'xxx', 'dick'];
function checkSpam(str, words) {
    for (let word of words) {
        if (str.toLowerCase().includes(word)) {
            return true;
        }
    }
    return false;
}
console.log('spam:', checkSpam('bViAgRaestorn!!!', spamWords));

function truncate(str, maxlength) {
    return str.length > maxlength ? str.slice(0, maxlength) + '...' : str;
}
console.log(truncate('–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç –î–∏–º–∞', 10)); // –ü—Ä–∏–≤–µ—Ç, –º–µ...

